buildscript {
    ext {
        springBootVersion = '2.0.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'project-report'
apply plugin: 'build-dashboard'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

apply plugin: 'war'
group = 'com.github.shk0da'
version = '1.0'
description = 'CloudConfig'
sourceCompatibility = 1.8

war {
    exec {
        commandLine 'cmd', '/c', 'yarn build'
    }
    manifest {
        attributes 'Implementation-Title': project.description
        attributes 'Implementation-Version': project.version
        attributes 'Implementation-Vendor': "com.github.shk0da"
        attributes 'Built-By': System.getProperty('user.name')
        attributes 'Build-Time': new Date().format("dd.MM.yyyy HH:mm")
        attributes 'Build-Jdk': System.getProperty('java.version')
        attributes 'Created-By': "Gradle ${gradle.gradleVersion}"
        writeTo "${buildDir}/www/WEB-INF/MANIFEST.MF"
    }

    webAppDirName = file("${buildDir}/www")
}

repositories {
    mavenCentral()
}

ext {
    springCloudVersion = 'Finchley.RELEASE'
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('org.springframework.boot:spring-boot-starter-webflux')
    compile('org.springframework.boot:spring-boot-starter-undertow')
    compile('org.springframework.boot:spring-boot-starter-mail')
    compile('org.springframework.boot:spring-boot-starter-web')

    compile('org.springframework.cloud:spring-cloud-starter')
    compile('org.springframework.cloud:spring-cloud-config-server')
    compile('org.springframework.cloud:spring-cloud-starter-config')
    compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-server')
    compile('org.springframework.cloud:spring-cloud-starter-security')
    compile('org.springframework.cloud:spring-cloud-starter-netflix-zuul')
    compile('org.springframework.cloud:spring-cloud-starter-netflix-ribbon')
    compile('org.springframework.cloud:spring-cloud-starter-netflix-hystrix')
    compile('org.springframework.cloud:spring-cloud-starter-openfeign')

    compile('org.springframework.retry:spring-retry')
    compile('org.springframework.plugin:spring-plugin-core')
    compile('org.springframework.plugin:spring-plugin-metadata')
    compile('org.springframework.security:spring-security-data')
    compile('org.springframework.security:spring-security-jwt')
    compile('org.springframework.security.oauth:spring-security-oauth2')
    compile('org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure')

    compile('io.jsonwebtoken:jjwt:0.9.1')
    compile('io.swagger:swagger-models:1.5.20')
    compile('io.springfox:springfox-core:2.9.2')
    compile('io.springfox:springfox-schema:2.9.2')
    compile('io.springfox:springfox-spi:2.9.2')
    compile('io.springfox:springfox-swagger-common:2.9.2')
    compile('io.springfox:springfox-spring-web:2.9.2')
    compile('io.springfox:springfox-swagger-ui:2.9.2')
    compile('io.springfox:springfox-swagger2:2.9.2')
    compile('io.springfox:springfox-bean-validators:2.9.2')

    compile('net.logstash.logback:logstash-logback-encoder:5.1')

    compile('io.micrometer:micrometer-core')
    compile('com.ryantenney.metrics:metrics-spring:3.1.3')
    compile('io.dropwizard.metrics:metrics-core')
    compile('io.dropwizard.metrics:metrics-annotation')
    compile('io.dropwizard.metrics:metrics-json')
    compile('io.dropwizard.metrics:metrics-jvm')
    compile('io.dropwizard.metrics:metrics-servlet')
    compile('io.dropwizard.metrics:metrics-servlets')

    compile('com.fasterxml.jackson.datatype:jackson-datatype-hppc')
    compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310')
    compile('com.fasterxml.jackson.datatype:jackson-datatype-json-org')

    compile('commons-io:commons-io')
    compile('commons-codec:commons-codec')
    compile('org.lz4:lz4-java:1.4.1')
    compile('com.google.guava:guava:25.1-jre')

    runtime('org.springframework.boot:spring-boot-devtools')
    testCompile('io.projectreactor:reactor-test')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.security:spring-security-test')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
